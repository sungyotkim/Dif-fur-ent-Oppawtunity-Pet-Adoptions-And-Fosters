/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("document.addEventListener(\"DOMContentLoaded\", e => {\n  const petsUrl = '../dist/data/petInfo.json';\n  const container = document.querySelector('.container-center');\n\n  const dropdown = __webpack_require__(/*! ./scripts/dropdown */ \"./src/scripts/dropdown.js\");\n\n  const featured = __webpack_require__(/*! ./scripts/featured */ \"./src/scripts/featured.js\");\n\n  const searchResult = __webpack_require__(/*! ./scripts/search-result */ \"./src/scripts/search-result.js\");\n\n  const searchBtn = document.querySelector(\".search-button\");\n  searchBtn.addEventListener(\"click\", () => {\n    const zipcodeContainer = document.querySelector(\"#zip-input\");\n    const btnTexts = document.querySelectorAll(\".dropdown-btn-text\"); // dropdown.featuredContainer.setAttribute('style', 'display: none;');\n    // dropdown.resultsContainer.setAttribute('style', 'display: none;');\n\n    let zipcode = zipcodeContainer.innerText;\n    let species = btnTexts[0].innerText;\n    let breed = btnTexts[1].innerText;\n    let age = btnTexts[2].innerText; // let pets = fetch(petsUrl).then(response => return response.json());\n\n    function getPets(url) {\n      return fetch(url).then(response => {\n        return response.json().then(data => {\n          return data;\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    }\n\n    function getFilteredPets() {\n      let any = ['Any', 'Multiple'];\n      let breeds = [];\n      let breedChecked = document.querySelectorAll(\".item-breed.checked\");\n      let ages = [];\n      document.querySelectorAll(\".item-age.checked\").forEach(age => ages.push(age.innerText.split(' ')[0]));\n      let ageRange = [];\n\n      function ageRangeFinder() {\n        let youngAges = ['1M', '2M', '3M', '4M', '5M', '6M', '7M', '8M', '9M', '10M', '11M'];\n        let teenAges = ['1Y', '2Y'];\n        let adultAges = ['3Y', '4Y', '5Y', '6Y', '7Y'];\n        let seniorAges = ['8Y', '9Y', '10Y', '11Y', '12Y', '13Y', '14Y', '15Y', '16Y', '17Y', '18Y', '19Y', '20Y', '21Y', '22Y', '23Y', '24Y', '25Y'];\n        let ageArr = [youngAges, teenAges, adultAges, seniorAges];\n        let categories = ['Young', 'Teen', 'Adult', 'Senior'];\n\n        for (let i = 0; i < categories.length; i++) {\n          if (ages.includes(categories[i])) {\n            ageRange.push(ageArr[i]);\n          }\n        }\n      }\n\n      getPets(petsUrl).then(pets => {\n        breedChecked.forEach(breedItem => {\n          breeds.push(breedItem.innerText);\n        });\n        ageRangeFinder();\n        let filtered = searchResult.filterSpecies(pets, species);\n        filtered = searchResult.filterBreed(filtered, breeds);\n        filtered = searchResult.filterAge(filtered, ageRange.flat());\n        searchResult.cardMaker(filtered);\n      });\n    }\n\n    ;\n    getFilteredPets(); //zipcode\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aUNiLFFBQVEsQ0FBQ2lCLElBQVQsRUFBakMsQ0FBWDtRQUNBOUMsWUFBWSxDQUFDK0MsU0FBYixDQUF1QkwsUUFBdkI7TUFDRCxDQVZEO0lBV0Q7O0lBQUE7SUFFRHJCLGVBQWUsR0EzRHlCLENBNkR4QztFQUNELENBOUREO0FBK0RELENBeEVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlmLWZ1ci1lbnQtb3BwYXd0dW5pdHktcGV0LWFkb3B0aW9ucy1hbmQtZm9zdGVycy8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGUgPT4ge1xuICBjb25zdCBwZXRzVXJsID0gJy4uL2Rpc3QvZGF0YS9wZXRJbmZvLmpzb24nXG4gIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWluZXItY2VudGVyJylcblxuICBjb25zdCBkcm9wZG93biA9IHJlcXVpcmUoJy4vc2NyaXB0cy9kcm9wZG93bicpO1xuICBjb25zdCBmZWF0dXJlZCA9IHJlcXVpcmUoJy4vc2NyaXB0cy9mZWF0dXJlZCcpO1xuICBjb25zdCBzZWFyY2hSZXN1bHQgPSByZXF1aXJlKCcuL3NjcmlwdHMvc2VhcmNoLXJlc3VsdCcpO1xuICBjb25zdCBzZWFyY2hCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNlYXJjaC1idXR0b25cIik7XG5cbiAgc2VhcmNoQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgY29uc3QgemlwY29kZUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjemlwLWlucHV0XCIpO1xuICAgIGNvbnN0IGJ0blRleHRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5kcm9wZG93bi1idG4tdGV4dFwiKTtcbiAgICAvLyBkcm9wZG93bi5mZWF0dXJlZENvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgJ2Rpc3BsYXk6IG5vbmU7Jyk7XG4gICAgLy8gZHJvcGRvd24ucmVzdWx0c0NvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgJ2Rpc3BsYXk6IG5vbmU7Jyk7XG5cbiAgICBsZXQgemlwY29kZSA9IHppcGNvZGVDb250YWluZXIuaW5uZXJUZXh0O1xuICAgIGxldCBzcGVjaWVzID0gYnRuVGV4dHNbMF0uaW5uZXJUZXh0O1xuICAgIGxldCBicmVlZCA9IGJ0blRleHRzWzFdLmlubmVyVGV4dDtcbiAgICBsZXQgYWdlID0gYnRuVGV4dHNbMl0uaW5uZXJUZXh0O1xuICAgIC8vIGxldCBwZXRzID0gZmV0Y2gocGV0c1VybCkudGhlbihyZXNwb25zZSA9PiByZXR1cm4gcmVzcG9uc2UuanNvbigpKTtcbiAgICBmdW5jdGlvbiBnZXRQZXRzKHVybCkge1xuICAgICAgcmV0dXJuIGZldGNoKHVybClcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkudGhlbihkYXRhID0+IHtcbiAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRGaWx0ZXJlZFBldHMoKSB7XG4gICAgICBsZXQgYW55ID0gWydBbnknLCAnTXVsdGlwbGUnXVxuICAgICAgbGV0IGJyZWVkcyA9IFtdO1xuICAgICAgbGV0IGJyZWVkQ2hlY2tlZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuaXRlbS1icmVlZC5jaGVja2VkXCIpO1xuICAgICAgbGV0IGFnZXMgPSBbXTtcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuaXRlbS1hZ2UuY2hlY2tlZFwiKS5mb3JFYWNoKGFnZSA9PiBhZ2VzLnB1c2goYWdlLmlubmVyVGV4dC5zcGxpdCgnICcpWzBdKSlcbiAgICAgIGxldCBhZ2VSYW5nZSA9IFtdO1xuICAgICAgXG4gICAgICBmdW5jdGlvbiBhZ2VSYW5nZUZpbmRlcigpIHtcbiAgICAgICAgbGV0IHlvdW5nQWdlcyA9IFsnMU0nLCAnMk0nLCAnM00nLCAnNE0nLCAnNU0nLCAnNk0nLCAnN00nLCAnOE0nLCAnOU0nLCAnMTBNJywgJzExTSddO1xuICAgICAgICBsZXQgdGVlbkFnZXMgPSBbJzFZJywgJzJZJ107XG4gICAgICAgIGxldCBhZHVsdEFnZXMgPSBbJzNZJywgJzRZJywgJzVZJywgJzZZJywgJzdZJ107XG4gICAgICAgIGxldCBzZW5pb3JBZ2VzID0gWyc4WScsICc5WScsICcxMFknLCAnMTFZJywgJzEyWScsICcxM1knLCAnMTRZJywgJzE1WScsICcxNlknLCAnMTdZJywgJzE4WScsICcxOVknLCAnMjBZJywgJzIxWScsICcyMlknLCAnMjNZJywgJzI0WScsICcyNVknXTtcbiAgICAgICAgbGV0IGFnZUFyciA9IFt5b3VuZ0FnZXMsIHRlZW5BZ2VzLCBhZHVsdEFnZXMsIHNlbmlvckFnZXNdO1xuICAgICAgICBsZXQgY2F0ZWdvcmllcyA9IFsnWW91bmcnLCAnVGVlbicsICdBZHVsdCcsICdTZW5pb3InXTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNhdGVnb3JpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBpZiAoYWdlcy5pbmNsdWRlcyhjYXRlZ29yaWVzW2ldKSkge1xuICAgICAgICAgICAgYWdlUmFuZ2UucHVzaChhZ2VBcnJbaV0pXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIGdldFBldHMocGV0c1VybCkudGhlbihwZXRzID0+IHtcbiAgICAgICAgYnJlZWRDaGVja2VkLmZvckVhY2goYnJlZWRJdGVtID0+IHtcbiAgICAgICAgICAgICAgYnJlZWRzLnB1c2goYnJlZWRJdGVtLmlubmVyVGV4dCk7XG4gICAgICAgIH0pXG4gICAgICAgICAgYWdlUmFuZ2VGaW5kZXIoKTtcblxuICAgICAgICBsZXQgZmlsdGVyZWQgPSBzZWFyY2hSZXN1bHQuZmlsdGVyU3BlY2llcyhwZXRzLCBzcGVjaWVzKTtcbiAgICAgICAgZmlsdGVyZWQgPSBzZWFyY2hSZXN1bHQuZmlsdGVyQnJlZWQoZmlsdGVyZWQsIGJyZWVkcyk7XG4gICAgICAgIGZpbHRlcmVkID0gc2VhcmNoUmVzdWx0LmZpbHRlckFnZShmaWx0ZXJlZCwgYWdlUmFuZ2UuZmxhdCgpKTtcbiAgICAgICAgc2VhcmNoUmVzdWx0LmNhcmRNYWtlcihmaWx0ZXJlZCk7XG4gICAgICB9KVxuICAgIH07XG5cbiAgICBnZXRGaWx0ZXJlZFBldHMoKTtcblxuICAgIC8vemlwY29kZVxuICB9KVxufSk7XG4iXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInBldHNVcmwiLCJjb250YWluZXIiLCJxdWVyeVNlbGVjdG9yIiwiZHJvcGRvd24iLCJyZXF1aXJlIiwiZmVhdHVyZWQiLCJzZWFyY2hSZXN1bHQiLCJzZWFyY2hCdG4iLCJ6aXBjb2RlQ29udGFpbmVyIiwiYnRuVGV4dHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiemlwY29kZSIsImlubmVyVGV4dCIsInNwZWNpZXMiLCJicmVlZCIsImFnZSIsImdldFBldHMiLCJ1cmwiLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiZ2V0RmlsdGVyZWRQZXRzIiwiYW55IiwiYnJlZWRzIiwiYnJlZWRDaGVja2VkIiwiYWdlcyIsImZvckVhY2giLCJwdXNoIiwic3BsaXQiLCJhZ2VSYW5nZSIsImFnZVJhbmdlRmluZGVyIiwieW91bmdBZ2VzIiwidGVlbkFnZXMiLCJhZHVsdEFnZXMiLCJzZW5pb3JBZ2VzIiwiYWdlQXJyIiwiY2F0ZWdvcmllcyIsImkiLCJsZW5ndGgiLCJpbmNsdWRlcyIsInBldHMiLCJicmVlZEl0ZW0iLCJmaWx0ZXJlZCIsImZpbHRlclNwZWNpZXMiLCJmaWx0ZXJCcmVlZCIsImZpbHRlckFnZSIsImZsYXQiLCJjYXJkTWFrZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/dropdown.js":
/*!*********************************!*\
  !*** ./src/scripts/dropdown.js ***!
  \*********************************/
/***/ (function() {

eval("const selectBtns = document.querySelectorAll(\".dropdown-top\");\nconst speciesItems = document.querySelectorAll(\".item-species\");\nconst breedItems = document.querySelectorAll(\".item-breed\");\nconst ageItems = document.querySelectorAll(\".item-age\");\nconst breedItemsList = document.querySelector(\".breed-items-list\");\nconst btn = document.querySelector(\".search-button\");\nconst featuredContainer = document.querySelector(\".featured-container\");\nconst resultsContainer = document.querySelector(\".container-results\");\nconst zipcodeContainer = document.querySelector(\"#zip-input\");\nconst btnTexts = document.querySelectorAll(\".dropdown-btn-text\"); //toggles for all dropdowns\n\nselectBtns.forEach(selectBtn => {\n  selectBtn.addEventListener(\"click\", () => {\n    selectBtn.classList.toggle(\"open\");\n  });\n}); //selections for species dropdown and appropriate fill in\n\nspeciesItems.forEach(speciesItem => {\n  speciesItem.addEventListener(\"click\", () => {\n    speciesItem.classList.toggle(\"checked\");\n    let speciesChecked = document.querySelectorAll(\".item-species.checked\");\n\n    if (speciesChecked && speciesChecked.length === 1) {\n      btnTexts[0].innerText = `${speciesChecked[0].innerText}`;\n      let hideList = speciesChecked[0].innerText === 'Canine' ? document.querySelectorAll('.Feline') : document.querySelectorAll('.Canine');\n      hideList.forEach(li => {\n        if (li.classList.contains(\"checked\")) {\n          li.classList.toggle(\"checked\");\n          let breedChecked = document.querySelectorAll(\".item-breed.checked\");\n\n          if (breedChecked && breedChecked.length === 1) {\n            btnTexts[1].innerText = `${breedChecked[0].innerText}`;\n          } else if (breedChecked && breedChecked.length > 1) {\n            btnTexts[1].innerText = \"Multiple\";\n          } else {\n            btnTexts[1].innerText = \"Any\";\n          }\n        }\n\n        li.setAttribute(\"style\", \"display: none\");\n      });\n      addSearchPicture(speciesChecked[0].innerText);\n    } else if (speciesChecked && speciesChecked.length > 1) {\n      btnTexts[0].innerText = \"Multiple\";\n      let showList1 = document.querySelectorAll(`.Canine`);\n      let showList2 = document.querySelectorAll(`.Feline`);\n      showList1.forEach(li => {\n        li.removeAttribute(\"style\");\n      });\n      showList2.forEach(li => {\n        li.removeAttribute(\"style\");\n      });\n      addSearchPicture('catdogcatdog');\n    } else {\n      btnTexts[0].innerText = \"Any\";\n      let showList1 = document.querySelectorAll(`.Canine`);\n      let showList2 = document.querySelectorAll(`.Feline`);\n      showList1.forEach(li => {\n        li.removeAttribute(\"style\");\n      });\n      showList2.forEach(li => {\n        li.removeAttribute(\"style\");\n      });\n      addSearchPicture();\n    }\n  });\n}); //selections for breed dropdown and appropriate fill in\n\nbreedItems.forEach(breedItem => {\n  breedItem.addEventListener(\"click\", () => {\n    breedItem.classList.toggle(\"checked\");\n    let breedChecked = document.querySelectorAll(\".item-breed.checked\");\n\n    if (breedChecked && breedChecked.length === 1) {\n      let felines = ['American Short Hair', 'Domestic Medium Hair', 'Domestic Short Hair', 'Exotic Short Hair'];\n\n      if (felines.includes(breedChecked[0].innerText)) {\n        let letters = breedChecked[0].innerText.split(' ').map(word => {\n          return word[0];\n        }).join(\"\");\n        btnTexts[1].innerText = `${letters}`;\n      } else {\n        btnTexts[1].innerText = `${breedChecked[0].innerText}`;\n      }\n    } else if (breedChecked && breedChecked.length > 1) {\n      btnTexts[1].innerText = \"Multiple\";\n    } else {\n      btnTexts[1].innerText = \"Any\";\n    }\n  });\n}); //selections for age dropdown and appropriate fill in\n\nageItems.forEach(ageItem => {\n  ageItem.addEventListener(\"click\", () => {\n    ageItem.classList.toggle(\"checked\");\n    let ageChecked = document.querySelectorAll(\".item-age.checked\");\n\n    if (ageChecked && ageChecked.length === 1) {\n      btnTexts[2].innerText = `${ageChecked[0].innerText.split(' ')[0]}`;\n    } else if (ageChecked && ageChecked.length > 1) {\n      btnTexts[2].innerText = \"Multiple\";\n    } else {\n      btnTexts[2].innerText = \"Any\";\n    }\n  });\n});\n\nfunction addSearchPicture() {\n  let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"catdog\";\n\n  if (btn.childNodes.length > 2) {\n    btn.removeChild(btn.lastChild);\n  }\n\n  const div = document.createElement('div');\n  const pic = document.createElement('img');\n  pic.src = `../../dist/assets/${name}.png`;\n  pic.setAttribute('height', \"80rem\");\n  pic.setAttribute('class', 'search-current-photo');\n  div.appendChild(pic);\n  div.setAttribute('class', 'search-photo');\n  btn.append(div);\n}\n\naddSearchPicture();\nbtn.addEventListener(\"click\", () => {\n  featuredContainer.setAttribute('style', 'display: none;');\n  resultsContainer.setAttribute('style', 'display: flex;');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/dropdown.js\n");

/***/ }),

/***/ "./src/scripts/featured.js":
/*!*********************************!*\
  !*** ./src/scripts/featured.js ***!
  \*********************************/
/***/ (function() {

eval("const container = document.querySelector('.featured-inner-container');\nconst petsUrl = '../../dist/data/petInfo.json';\n\nfunction reqPetPhoto() {\n  fetch(petsUrl).then(res => res.json()).then(data => photoAdder(data)).catch(error => {\n    console.log(error);\n  });\n}\n\nfunction photoAdder(data) {\n  let petsWithVideos = data.filter(pet => pet.videos.length > 0 && pet.photos.length > 1);\n  let featuredPets = [];\n\n  while (featuredPets.length < 5) {\n    let sampleIdx = Math.floor(Math.random() * petsWithVideos.length);\n    let sample = petsWithVideos[sampleIdx];\n    featuredPets.push(sample);\n    petsWithVideos.splice(sampleIdx, 1);\n  }\n\n  featuredPets.forEach(currentPet => {\n    const card = document.createElement('a'); // card.setAttribute('href', '')\n\n    card.setAttribute('class', 'featured-card');\n    const img = document.createElement('img');\n    img.src = `../../dist/data/pets/${currentPet.name.toLowerCase()}/photos/${currentPet.photos[1]}`;\n    img.setAttribute('width', '50px');\n    img.setAttribute('class', 'featured-img');\n    const cardTitle = document.createElement('div');\n    cardTitle.innerText = `${currentPet.name} the ${currentPet.characteristics[0]} ${currentPet.species === 'Canine' ? 'dog' : 'cat'}`;\n    cardTitle.setAttribute('class', 'featured-card-title');\n    const cardName = document.createElement('div');\n    const cardDescription = document.createElement('div'); // cardName.innerText = `${currentPet.name}`;\n\n    cardName.innerText = `${currentPet.name} the ${currentPet.characteristics[0]} ${currentPet.species === 'Canine' ? 'dog' : 'cat'}`;\n    cardName.setAttribute('class', 'featured-card-name');\n    cardDescription.innerText = `${currentPet.bio} Click to see more!`;\n    cardDescription.setAttribute('class', 'featured-card-bio');\n    card.appendChild(img);\n    card.appendChild(cardTitle);\n    card.appendChild(cardName);\n    card.appendChild(cardDescription);\n    container.append(card);\n  });\n}\n\nreqPetPhoto();\n\nfunction timer() {\n  let countDownDate = new Date(\"Jan 1, 2023 00:00:00\").getTime();\n  let x = setInterval(function () {\n    let timeNow = new Date().getTime();\n    let timeDistance = countDownDate - timeNow;\n    let days = Math.floor(timeDistance / (1000 * 60 * 60 * 24));\n    let hours = Math.floor(timeDistance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n    let minutes = Math.floor(timeDistance % (1000 * 60 * 60) / (1000 * 60));\n    let seconds = Math.floor(timeDistance % (1000 * 60) / 1000);\n    let goalTimer = document.getElementById(\"goal-timer\").innerHTML = days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \";\n\n    if (timeDistance < 0) {\n      clearInterval(x);\n      goalTimer.innerHTML = 'Finished!';\n    }\n  }, 1000);\n}\n\ntimer(); //fake incrementer to simulate adoptions\n\nfunction goalIncrementer() {\n  let goal = document.getElementById(\"adopted-numbers\");\n  setInterval(() => {\n    let current = goal.innerText;\n    current = current.split(\",\").join(\"\");\n    let next = parseInt(current) + 1;\n    goal.innerText = next.toLocaleString(\"en-US\");\n  }, 10000);\n}\n\ngoalIncrementer();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/featured.js\n");

/***/ }),

/***/ "./src/scripts/search-result.js":
/*!**************************************!*\
  !*** ./src/scripts/search-result.js ***!
  \**************************************/
/***/ (function(module) {

eval("const petsUrl = '../../dist/data/petInfo.json';\nconst resultsContainer = document.querySelector('.results-card-container');\nconst sheltersUrl = '../../dist/data/shelterInfo.json';\nconst shelterContainer = document.querySelector(\".inner-shelter-chart-container\");\n\nfunction reqPetInfo() {\n  fetch(petsUrl).then(res => res.json()).then(data => cardMaker(data)).catch(error => {\n    console.log(error);\n  });\n}\n\nfunction cardMaker(pets) {\n  resultsContainer.innerHTML = \"\";\n  pets.forEach(pet => {\n    const card = document.createElement('div');\n    const cardImgHolder = document.createElement('div');\n    const cardImg = document.createElement('img');\n    const nameTag = document.createElement('div');\n    const cardBio = document.createElement('div');\n    const cardShelter = document.createElement('div');\n    card.setAttribute('class', 'result-card');\n    cardImgHolder.setAttribute('class', 'result-card-img-holder');\n    cardImg.setAttribute('class', 'result-card-img');\n    nameTag.setAttribute('class', 'result-card-name');\n    cardBio.setAttribute('class', 'result-card-bio');\n    cardImg.src = `../../dist/data/pets/${pet.name.toLowerCase()}/photos/${pet.photos[0]}`;\n    nameTag.innerText = `${pet.name}`;\n    cardBio.innerText = `${pet.bio}`;\n    cardImgHolder.appendChild(cardImg);\n    card.appendChild(cardImgHolder);\n    resultsContainer.append(card);\n    const cardBioHolder = document.createElement('div');\n    cardBioHolder.setAttribute('class', 'result-card-bio-holder');\n    cardBioHolder.appendChild(cardBio); // cardBioHolder.appendChild(drawCardAnimation());\n\n    card.appendChild(cardBioHolder);\n    card.appendChild(nameTag);\n    cardShelter.setAttribute('class', 'result-card-shelter');\n    cardShelter.setAttribute('style', 'display: none;');\n    cardShelter.innerText = `${pet.shelter}`;\n    card.appendChild(cardShelter);\n  });\n} // function drawCardAnimation() {\n//   const svg = document.createElement('svg');\n//   svg.setAttribute('id', 'curve');\n//   const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n//   path.setAttribute('id', 'p');\n//   path.setAttribute('d', 'M0,200 Q80,100 400,200 V150 H0 V50');\n//   path.setAttribute('transform', 'translate(0 300)')\n//   const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n//   rect.setAttribute('id', 'dummyRect');\n//   rect.setAttribute('x', '0');\n//   rect.setAttribute('y', '0');\n//   rect.setAttribute('height', '450');\n//   rect.setAttribute('width', '400')\n//   rect.setAttribute('fill', 'transparent');\n//   //slide up\n//   const animate1 = document.createElementNS('http://www.w3.org/2000/svg', 'animate');\n//   animate1.setAttribute('xlink:href', \"#p\");\n//   animate1.setAttribute('attributeName', 'd');\n//   animate1.setAttribute('to', \"M0,50 Q80,100 400,50 V150 H0 V50\");\n//   animate1.setAttribute('fill', 'freeze');\n//   animate1.setAttribute('begin', 'dummyRect.mouseover');\n//   animate1.setAttribute('end', 'dummyRect.mouseout');\n//   animate1.setAttribute('dur', '0.1s');\n//   animate1.setAttribute('id', 'bounce1');\n//   //slide up and curve in\n//   const animate2 = document.createElementNS('http://www.w3.org/2000/svg', 'animate');\n//   animate2.setAttribute('xlink:href', \"#p\");\n//   animate2.setAttribute('attributeName', 'd');\n//   animate2.setAttribute('to', \"M0,50 Q80,0 400,50 V150 H0 V50\");\n//   animate2.setAttribute('fill', 'freeze');\n//   animate2.setAttribute('begin', 'bounce1.end');\n//   animate2.setAttribute('end', 'dummyRect.mouseout');\n//   animate2.setAttribute('dur', '0.15s');\n//   animate2.setAttribute('id', 'bounce2');\n//   //slide down and curve in\n//   const animate3 = document.createElementNS('http://www.w3.org/2000/svg', 'animate');\n//   animate3.setAttribute('xlink:href', \"#p\");\n//   animate3.setAttribute('attributeName', 'd');\n//   animate3.setAttribute('to', \"M0,50 Q80,80 400,50 V150 H0 V50\");\n//   animate3.setAttribute('fill', 'freeze');\n//   animate3.setAttribute('begin', 'bounce2.end');\n//   animate3.setAttribute('end', 'dummyRect.mouseout');\n//   animate3.setAttribute('dur', '0.15s');\n//   animate3.setAttribute('id', 'bounce3');\n//   //slide down and curve out\n//   const animate4 = document.createElementNS('http://www.w3.org/2000/svg', 'animate');\n//   animate4.setAttribute('xlink:href', \"#p\");\n//   animate4.setAttribute('attributeName', 'd');\n//   animate4.setAttribute('to', \"M0,50 Q80,45 400,50 V150 H0 V50\");\n//   animate4.setAttribute('fill', 'freeze');\n//   animate4.setAttribute('begin', 'bounce3.end');\n//   animate4.setAttribute('end', 'dummyRect.mouseout');\n//   animate4.setAttribute('dur', '0.1s');\n//   animate4.setAttribute('id', 'bounce4');\n//   //curve in\n//   const animate5 = document.createElementNS('http://www.w3.org/2000/svg', 'animate');\n//   animate5.setAttribute('xlink:href', \"#p\");\n//   animate5.setAttribute('attributeName', 'd');\n//   animate5.setAttribute('to', \"M0,50 Q80,50 400,50 V150 H0 V50\");\n//   animate5.setAttribute('fill', 'freeze');\n//   animate5.setAttribute('begin', 'bounce4.end');\n//   animate5.setAttribute('end', 'dummyRect.mouseout');\n//   animate5.setAttribute('dur', '0.05s');\n//   animate5.setAttribute('id', 'bounce5');\n//   const animate6 = document.createElementNS('http://www.w3.org/2000/svg', 'animate');\n//   animate6.setAttribute('xlink:href', \"#p\");\n//   animate6.setAttribute('attributeName', 'd');\n//   animate6.setAttribute('to', \"M0,200 Q80,100 400,200 V150 H0 V50\");\n//   animate6.setAttribute('fill', 'freeze');\n//   animate6.setAttribute('begin', 'dummyRect.mouseout');\n//   animate6.setAttribute('dur', '0.15s');\n//   animate6.setAttribute('id', 'bounceOut');\n//   svg.appendChild(path);\n//   svg.appendChild(rect);\n//   svg.appendChild(animate1);\n//   svg.appendChild(animate2);\n//   svg.appendChild(animate3);\n//   svg.appendChild(animate4);\n//   svg.appendChild(animate5);\n//   svg.appendChild(animate6);\n//   return svg\n// }\n\n\nreqPetInfo();\n\nfunction filterSpecies(pets, species) {\n  if (species === 'Any' || species === 'Multiple') {\n    return pets;\n  }\n\n  let filtered = pets.filter(pet => {\n    return pet.species === species;\n  });\n  return filtered;\n}\n\nfunction filterBreed(pets, breed) {\n  if (breed.length === 0) {\n    return pets;\n  }\n\n  let filtered = pets.filter(pet => {\n    return breed.includes(pet.breed);\n  });\n  return filtered;\n}\n\nfunction filterAge(pets, ages) {\n  if (ages.length === 0) {\n    return pets;\n  }\n\n  let filtered = pets.filter(pet => {\n    return ages.includes(pet.age);\n  });\n  return filtered;\n} // function filterShelter(pets, shelter) {\n//   if (shelter.length === 0) { return pets }\n//   let filtered = pets.filter(pet => {\n//     return shelter.includes(pet.shelter);\n//   })\n//   return filtered;\n// }\n\n\nmodule.exports.filterSpecies = filterSpecies;\nmodule.exports.filterBreed = filterBreed;\nmodule.exports.filterAge = filterAge; // module.exports.filterShelter = filterShelter;\n\nmodule.exports.reqPetInfo = reqPetInfo;\nmodule.exports.cardMaker = cardMaker;\n\nfunction reqShelterInfo() {\n  fetch(sheltersUrl).then(res => res.json()).then(data => shelterChartMaker(data)).catch(error => {\n    console.log(error);\n  });\n}\n\nlet sheltersChecked = [];\n\nfunction shelterChartMaker(shelters) {\n  shelters.forEach(shelter => {\n    const row = document.createElement('div');\n    const logoContainer = document.createElement('div');\n    const nameTag = document.createElement('div');\n    const logo = document.createElement('img');\n    row.setAttribute('class', 'shelter-row');\n    logoContainer.setAttribute('class', 'shelter-logo-container');\n    nameTag.setAttribute('class', 'shelter-name-container');\n    logo.setAttribute('class', 'shelter-logo-img');\n    logo.src = `../../dist/data/assets/${shelter.name}.svg`;\n    nameTag.innerText = `${shelter.name}`;\n    logoContainer.appendChild(logo);\n    row.appendChild(logoContainer);\n    row.appendChild(nameTag);\n    shelterContainer.appendChild(row);\n    row.addEventListener(\"click\", () => {\n      row.classList.toggle(\"checked\");\n      let rowsChecked = document.querySelectorAll(\".shelter-row.checked\");\n      let cards = resultsContainer.querySelectorAll('.result-card');\n\n      if (rowsChecked.length > 0) {\n        let sheltersChecked = [];\n        rowsChecked.forEach(row => {\n          sheltersChecked.push(row.innerText);\n        });\n        cards.forEach(card => {\n          if (!sheltersChecked.includes(card.lastChild.innerText)) {\n            card.setAttribute('style', 'display: none;');\n          } else {\n            card.setAttribute('style', 'display: \"\";');\n          }\n        });\n      } else {\n        cards.forEach(card => {\n          card.setAttribute('style', 'display: \"\";');\n        });\n      }\n    });\n  });\n}\n\nreqShelterInfo();\n\nfunction getSheltersChecked() {\n  return sheltersChecked;\n}\n\nmodule.exports.getSheltersChecked = getSheltersChecked;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/search-result.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaWYtZnVyLWVudC1vcHBhd3R1bml0eS1wZXQtYWRvcHRpb25zLWFuZC1mb3N0ZXJzLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;